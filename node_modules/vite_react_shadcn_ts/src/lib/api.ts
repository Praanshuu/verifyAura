// frontend/src/lib/api.ts
import { apiFetchOptimized, clearApiCache } from './apiOptimized';
export { clearApiCache } from './apiOptimized';

const BASE = import.meta.env.VITE_API_BASE_URL as string || 'http://localhost:3001';

if (!BASE) {
  console.warn('VITE_API_BASE_URL is not defined, using default: http://localhost:3001');
}

export interface ApiError {
  message: string;
  code?: string;
  status: number;
}

// Use the optimized fetch function with retry logic and caching
export const apiFetch = apiFetchOptimized;

export function toQueryString(params: Record<string, unknown> = {}): string {
  const search = new URLSearchParams();
  Object.entries(params).forEach(([key, value]) => {
    if (value === undefined || value === null || value === '') return;
    search.append(key, String(value));
  });
  return search.toString() ? `?${search.toString()}` : '';
}


