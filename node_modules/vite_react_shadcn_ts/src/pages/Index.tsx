
import { useState } from "react";
import { Search, CheckCircle, XCircle, Globe, Zap, Shield, Calendar, User, Award, FileText, Building, Tag } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Card } from "@/components/ui/card";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import { apiFetch } from "@/lib/api";

interface VerificationResult {
  valid: boolean;
  participant?: {
    name: string;
    email: string;
    event_name: string;
    event_code: string;
    event_description: string;
    event_date: string;
    event_tag: string;
    certificate_id: string;
    created_at: string;
    is_active: boolean;
    revoked: boolean;
    revoke_reason: string | null;
    revoked_at: string | null;
  };
}

const Index = () => {
  const [certificateId, setCertificateId] = useState("");
  const [isVerifying, setIsVerifying] = useState(false);
  const [verificationResult, setVerificationResult] = useState<VerificationResult | null>(null);
  const [hasSearched, setHasSearched] = useState(false);
  
  const handleVerify = async () => {
    if (!certificateId.trim()) return;
    
    setIsVerifying(true);
    setVerificationResult(null);
    setHasSearched(true);
    
    try {
      // Use direct fetch for better reliability
      const response = await fetch('http://localhost:3001/api/certificates/verify', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ certificateId: certificateId.trim() })
      });
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const result = await response.json();
      
      // Make sure we're setting the correct result
      if (result && typeof result === 'object') {
        setVerificationResult(result);
      } else {
        setVerificationResult({ valid: false });
      }
    } catch (error: any) {
      console.error('Certificate verification failed:', error.message);
      setVerificationResult({ valid: false });
    } finally {
      setIsVerifying(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col bg-gradient-to-br from-background via-background to-muted/20">
      <Header />
      
      <main className="flex-1">
        {/* Hero Section */}
        <section className="relative py-20 lg:py-32 overflow-hidden">
          {/* Background Elements */}
          <div className="absolute inset-0 bg-gradient-to-br from-brand-green/5 via-transparent to-brand-navy/5"></div>
          <div className="absolute top-20 right-20 w-72 h-72 bg-brand-green/10 rounded-full blur-3xl animate-pulse"></div>
          <div className="absolute bottom-20 left-20 w-96 h-96 bg-brand-navy/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
          
          <div className="container mx-auto px-4 lg:px-8 relative z-10">
            <div className="text-center max-w-4xl mx-auto animate-fade-in">
              <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold mb-6 leading-tight">
                <span className="bg-gradient-to-r from-brand-green to-brand-navy bg-clip-text text-transparent">
                  Verify Certificates
                </span>
                <br />
                <span className="text-foreground">with Confidence</span>
              </h1>
              
              <p className="text-lg sm:text-xl text-muted-foreground mb-12 max-w-2xl mx-auto leading-relaxed">
                Instantly validate the authenticity of certificates issued by trusted institutions. 
                Experience digital verification powered by cutting-edge technology.
              </p>
              
              {/* Verification Input */}
              <div className="max-w-xl mx-auto mb-16">
                <Card className="glassmorphic dark:glassmorphic-dark border-0 shadow-2xl p-8">
                  <div className="space-y-4">
                    <div className="flex items-center gap-3 mb-2">
                      <Shield className="h-5 w-5 text-brand-green" />
                      <h3 className="text-lg font-semibold">Secure Certificate Verification</h3>
                    </div>
                    
                    <div className="flex flex-col sm:flex-row gap-3">
                      <div className="relative flex-1">
                        <Input
                          placeholder="Enter Certificate ID or Email"
                          value={certificateId}
                          onChange={(e) => setCertificateId(e.target.value)}
                          className="w-full h-12 pl-12 pr-4 rounded-xl border-muted-foreground/20 bg-background/50 backdrop-blur-sm focus:bg-background/80 transition-all duration-300"
                          onKeyPress={(e) => e.key === 'Enter' && handleVerify()}
                          disabled={isVerifying}
                        />
                        <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-muted-foreground" />
                      </div>
                      <Button
                        onClick={handleVerify}
                        disabled={isVerifying || !certificateId.trim()}
                        className="h-12 px-8 rounded-xl bg-gradient-to-r from-brand-green to-brand-navy hover:shadow-lg hover:scale-105 transition-all duration-300 font-semibold min-w-[140px]"
                      >
                        {isVerifying ? (
                          <div className="flex items-center gap-2">
                            <div className="w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin"></div>
                            Verifying
                          </div>
                        ) : (
                          "Verify Now"
                        )}
                      </Button>
                    </div>
                    
                    <p className="text-xs text-muted-foreground">
                      Enter your unique certificate ID or the email address associated with your certificate
                    </p>
                  </div>
                </Card>
              </div>
              
              {/* Verification Result */}
              {hasSearched && verificationResult && (
                <div className="max-w-3xl mx-auto mb-8 animate-fade-in">
                  {verificationResult.participant ? (
                    verificationResult.participant.revoked ? (
                      // Revoked Certificate
                      <Card className="border-2 border-orange-200 bg-orange-50/50 dark:bg-orange-950/20 dark:border-orange-800 p-8 shadow-xl">
                        {/* Revoked Header */}
                        <div className="text-center mb-6">
                          <div className="w-16 h-16 rounded-full bg-orange-100 dark:bg-orange-900 mx-auto mb-4 flex items-center justify-center">
                            <XCircle className="h-8 w-8 text-orange-600 dark:text-orange-400" />
                          </div>
                          <h3 className="text-2xl font-bold text-orange-800 dark:text-orange-200 mb-2">
                            Certificate Revoked
                          </h3>
                          <p className="text-sm text-orange-700 dark:text-orange-300">
                            This certificate has been revoked and is no longer valid
                          </p>
                        </div>
                        
                        {/* Certificate Details */}
                        <div className="space-y-4 mt-8 p-6 bg-white/50 dark:bg-black/20 rounded-lg">
                          <div className="grid gap-4">
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[140px]">
                                <User className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Participant Name:</span>
                              </div>
                              <p className="font-semibold text-base flex-1">{verificationResult.participant.name}</p>
                            </div>
                            
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[140px]">
                                <FileText className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Certificate ID:</span>
                              </div>
                              <p className="font-mono text-sm bg-muted/50 px-3 py-1 rounded flex-1 break-all">{verificationResult.participant.certificate_id}</p>
                            </div>
                            
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[140px]">
                                <XCircle className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Revoke Reason:</span>
                              </div>
                              <p className="text-orange-700 dark:text-orange-300 font-semibold flex-1">
                                {verificationResult.participant.revoke_reason || 'No reason provided'}
                              </p>
                            </div>
                            
                            {verificationResult.participant.revoked_at && (
                              <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                                <div className="flex items-center gap-2 min-w-[140px]">
                                  <Calendar className="h-4 w-4 text-muted-foreground" />
                                  <span className="text-sm font-medium text-muted-foreground">Revoked On:</span>
                                </div>
                                <p className="font-semibold flex-1">
                                  {new Date(verificationResult.participant.revoked_at).toLocaleDateString('en-US', {
                                    year: 'numeric',
                                    month: 'long',
                                    day: 'numeric'
                                  })}
                                </p>
                              </div>
                            )}
                          </div>
                        </div>
                      </Card>
                    ) : (
                      // Valid Certificate
                      <Card className="border-2 border-green-200 bg-green-50/50 dark:bg-green-950/20 dark:border-green-800 p-8 shadow-xl">
                        {/* Success Header */}
                        <div className="text-center mb-6">
                          <div className="w-16 h-16 rounded-full bg-green-100 dark:bg-green-900 mx-auto mb-4 flex items-center justify-center">
                            <CheckCircle className="h-8 w-8 text-green-600 dark:text-green-400" />
                          </div>
                          <h3 className="text-2xl font-bold text-green-800 dark:text-green-200">
                            Certificate Verified Successfully
                          </h3>
                        </div>
                        
                        {/* Certificate Details - Improved Alignment */}
                        <div className="space-y-4 p-6 bg-white/50 dark:bg-black/20 rounded-lg">
                          <div className="grid gap-4">
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[150px]">
                                <User className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Participant Name:</span>
                              </div>
                              <p className="font-semibold text-base flex-1">{verificationResult.participant.name}</p>
                            </div>
                            
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[150px]">
                                <FileText className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Certificate ID:</span>
                              </div>
                              <p className="font-mono text-sm bg-muted/50 px-3 py-1 rounded flex-1 break-all">{verificationResult.participant.certificate_id}</p>
                            </div>
                            
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[150px]">
                                <Award className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Event Name:</span>
                              </div>
                              <p className="font-semibold flex-1">{verificationResult.participant.event_name}</p>
                            </div>
                            
                            {verificationResult.participant.event_description && (
                              <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                                <div className="flex items-center gap-2 min-w-[150px]">
                                  <FileText className="h-4 w-4 text-muted-foreground" />
                                  <span className="text-sm font-medium text-muted-foreground">Event Description:</span>
                                </div>
                                <p className="text-sm text-muted-foreground flex-1">{verificationResult.participant.event_description}</p>
                              </div>
                            )}
                            
                            <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                              <div className="flex items-center gap-2 min-w-[150px]">
                                <Calendar className="h-4 w-4 text-muted-foreground" />
                                <span className="text-sm font-medium text-muted-foreground">Issue Date:</span>
                              </div>
                              <p className="font-semibold flex-1">
                                {new Date(verificationResult.participant.created_at).toLocaleDateString('en-US', {
                                  year: 'numeric',
                                  month: 'long',
                                  day: 'numeric'
                                })}
                              </p>
                            </div>
                            
                            {verificationResult.participant.event_tag && (
                              <div className="flex flex-col sm:flex-row sm:items-start gap-2">
                                <div className="flex items-center gap-2 min-w-[150px]">
                                  <Tag className="h-4 w-4 text-muted-foreground" />
                                  <span className="text-sm font-medium text-muted-foreground">Event Tag:</span>
                                </div>
                                <Badge className="bg-brand-green/10 text-brand-green border-brand-green/20">
                                  {verificationResult.participant.event_tag}
                                </Badge>
                              </div>
                            )}
                          </div>
                        </div>
                      </Card>
                    )
                  ) : (
                    <Card className="border-2 border-red-200 bg-red-50/50 dark:bg-red-950/20 dark:border-red-800 p-8 shadow-xl">
                      <div className="text-center">
                        <div className="w-16 h-16 rounded-full bg-red-100 dark:bg-red-900 mx-auto mb-4 flex items-center justify-center">
                          <XCircle className="h-8 w-8 text-red-600 dark:text-red-400" />
                        </div>
                        <h3 className="text-2xl font-bold text-red-800 dark:text-red-200 mb-4">
                          Certificate Not Found
                        </h3>
                        <p className="text-red-700 dark:text-red-300 mb-2">
                          No valid certificate found for the provided ID or email.
                        </p>
                        <p className="text-sm text-muted-foreground">
                          Please verify your input and try again. If you believe this is an error, please contact the issuing institution.
                        </p>
                        
                        <Button
                          variant="outline"
                          className="mt-6 rounded-xl"
                          onClick={() => {
                            setCertificateId("");
                            setVerificationResult(null);
                            setHasSearched(false);
                          }}
                        >
                          Try Another Search
                        </Button>
                      </div>
                    </Card>
                  )}
                </div>
              )}
              
              {/* Features */}
              <div className="grid grid-cols-1 sm:grid-cols-3 gap-8 max-w-3xl mx-auto">
                <div className="flex flex-col items-center space-y-3 group">
                  <div className="p-4 rounded-2xl bg-brand-green/10 group-hover:bg-brand-green/20 transition-colors duration-300">
                    <CheckCircle className="h-8 w-8 text-brand-green" />
                  </div>
                  <h3 className="font-semibold text-lg">Instant Verification</h3>
                  <p className="text-sm text-muted-foreground text-center">Real-time certificate validation in seconds</p>
                </div>
                
                <div className="flex flex-col items-center space-y-3 group">
                  <div className="p-4 rounded-2xl bg-brand-navy/10 group-hover:bg-brand-navy/20 transition-colors duration-300">
                    <Globe className="h-8 w-8 text-brand-navy" />
                  </div>
                  <h3 className="font-semibold text-lg">Global Access</h3>
                  <p className="text-sm text-muted-foreground text-center">Verify certificates from anywhere, anytime</p>
                </div>
                
                <div className="flex flex-col items-center space-y-3 group">
                  <div className="p-4 rounded-2xl bg-brand-orange/10 group-hover:bg-brand-orange/20 transition-colors duration-300">
                    <Zap className="h-8 w-8 text-brand-orange" />
                  </div>
                  <h3 className="font-semibold text-lg">Secure & Fast</h3>
                  <p className="text-sm text-muted-foreground text-center">Enterprise-grade security with lightning speed</p>
                </div>
              </div>
            </div>
          </div>
        </section>
        
        {/* About Section */}
        <section className="py-16 bg-muted/30">
          <div className="container mx-auto px-4 lg:px-8 text-center">
            <div className="max-w-3xl mx-auto space-y-6">
              <h2 className="text-3xl font-bold text-foreground">
                Trusted Digital Verification
              </h2>
              <p className="text-lg text-muted-foreground leading-relaxed">
                Our platform ensures the highest standards of digital trust through automated verification, 
                blockchain-secured records, and instant validation processes that protect both institutions and recipients.
              </p>
              <div className="grid grid-cols-1 sm:grid-cols-3 gap-8 mt-12">
                <div className="text-center space-y-2">
                  <div className="text-2xl font-bold text-brand-green">99.9%</div>
                  <div className="text-sm text-muted-foreground">Accuracy Rate</div>
                </div>
                <div className="text-center space-y-2">
                  <div className="text-2xl font-bold text-brand-navy">50K+</div>
                  <div className="text-sm text-muted-foreground">Verified Certificates</div>
                </div>
                <div className="text-center space-y-2">
                  <div className="text-2xl font-bold text-brand-orange">24/7</div>
                  <div className="text-sm text-muted-foreground">System Availability</div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      
      <Footer />
    </div>
  );
};

export default Index;
